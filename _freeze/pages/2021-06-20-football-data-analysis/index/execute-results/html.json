{
  "hash": "657aedcb9df409177f59b4f64b1fd60f",
  "result": {
    "markdown": "---\ndate: 2021-06-21\ntitle: \"Analyzing international football results with Julia\"\ncategories: [\"julia\"]\n---\n\nAs the UEFA Euro 202(0/1) is going on, I was inspired to check out a dataset of all international men's football matches since the dawn of time.\nThis post goes over some questions I had for the dataset, and how I approached the analysis with my recent macro package DataFrameMacros.jl.\nPlotting is done with AlgebraOfGraphics.jl, which is a super useful grammar-of-graphics style package building on Makie.jl, which I'm a co-author of and which is therefore my preferred plotting package.\n\nLet's set up some basics and import the necessary packages:\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nusing CairoMakie\nusing AlgebraOfGraphics\nusing Chain\nusing CSV\nusing Downloads\nusing DataFrames\nusing DataFrameMacros\nusing StatsBase\nusing Dates\n\nCairoMakie.activate!(type = \"svg\")\nset_theme!(theme_minimal())\n```\n:::\n\n\nFirst, we need to download the dataset, which is available on [github](https://raw.githubusercontent.com/martj42/international_results/master/results.csv).\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nurl = \"https://raw.githubusercontent.com/martj42/international_results/master/results.csv\"\n\ndf = @chain url begin\n    Downloads.download\n    CSV.File(missingstring = \"NA\")\n    DataFrame\nend\n\nfirst(df, 10)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div class=\"data-frame\"><p>10 rows × 9 columns (omitted printing of 2 columns)</p><table class=\"data-frame\"><thead><tr><th></th><th>date</th><th>home_team</th><th>away_team</th><th>home_score</th><th>away_score</th><th>tournament</th><th>city</th></tr><tr><th></th><th title=\"Date\">Date</th><th title=\"String\">String</th><th title=\"String\">String</th><th title=\"Int64\">Int64</th><th title=\"Int64\">Int64</th><th title=\"String\">String</th><th title=\"String31\">String31</th></tr></thead><tbody><tr><th>1</th><td>1872-11-30</td><td>Scotland</td><td>England</td><td>0</td><td>0</td><td>Friendly</td><td>Glasgow</td></tr><tr><th>2</th><td>1873-03-08</td><td>England</td><td>Scotland</td><td>4</td><td>2</td><td>Friendly</td><td>London</td></tr><tr><th>3</th><td>1874-03-07</td><td>Scotland</td><td>England</td><td>2</td><td>1</td><td>Friendly</td><td>Glasgow</td></tr><tr><th>4</th><td>1875-03-06</td><td>England</td><td>Scotland</td><td>2</td><td>2</td><td>Friendly</td><td>London</td></tr><tr><th>5</th><td>1876-03-04</td><td>Scotland</td><td>England</td><td>3</td><td>0</td><td>Friendly</td><td>Glasgow</td></tr><tr><th>6</th><td>1876-03-25</td><td>Scotland</td><td>Wales</td><td>4</td><td>0</td><td>Friendly</td><td>Glasgow</td></tr><tr><th>7</th><td>1877-03-03</td><td>England</td><td>Scotland</td><td>1</td><td>3</td><td>Friendly</td><td>London</td></tr><tr><th>8</th><td>1877-03-05</td><td>Wales</td><td>Scotland</td><td>0</td><td>2</td><td>Friendly</td><td>Wrexham</td></tr><tr><th>9</th><td>1878-03-02</td><td>Scotland</td><td>England</td><td>7</td><td>2</td><td>Friendly</td><td>Glasgow</td></tr><tr><th>10</th><td>1878-03-23</td><td>Scotland</td><td>Wales</td><td>9</td><td>0</td><td>Friendly</td><td>Glasgow</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nLet's start with a simple question: How did the number of games played per year develop over time?\nIn DataFrameMacros.jl, you can group by columns that you create directly in the groupby call.\n\nWe can directly visualize the result by chaining the analysis into AlgebraOfGraphics.\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\n@chain df begin\n    @groupby(:year = year(:date))\n    combine(nrow => :n_games)\n    data(_) *\n        mapping(:year => \"Year\", :n_games => \"Number of games\") *\n        visual(Scatter)\n    draw\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n![](index_files/figure-html/cell-4-output-1.svg){}\n:::\n:::\n\n\nThere has been a huge growth in the number of games per year.\nWhat could have been the driving factors there?\nWe could look at the development of friendly vs. non-friendly games.\n\nAs soon as there are some groups to plot separately, I like using AlgebraOfGraphics.jl, which does all the work of grouping and legend building for me.\nI can build one long chain that culminates in a plot, so I don't have to come up with names for intermediary steps.\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\n@chain df begin\n    @groupby(:year = year(:date), :friendly = :tournament == \"Friendly\")\n    combine(nrow => :n_games)\n    data(_) *\n        mapping(:year => \"Year\", :n_games => \"Number of games\",\n            color = :friendly => nonnumeric) *\n        visual(Scatter)\n    draw\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n![](index_files/figure-html/cell-5-output-1.svg){}\n:::\n:::\n\n\nSo we can see that both friendlies and competitions have become much more numerous, although the competitions are responsible for the larger share.\n\nAnother way we could look at this information is to count the number of different competitions per year:\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\n@chain df begin\n    @subset(:tournament != \"Friendly\")\n    @groupby(:year = year(:date))\n    @combine(:n_competitions = length(unique(:tournament)))\n    data(_) *\n        mapping(:year => \"Year\", :n_competitions => \"Number of competitions\") *\n        (visual(Scatter, markersize = 5) + smooth())\n    draw\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n![](index_files/figure-html/cell-6-output-1.svg){}\n:::\n:::\n\n\nAnd of course the average number of teams per competition:\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\n@chain df begin\n    @subset(:tournament != \"Friendly\")\n    @groupby(:year = year(:date), :tournament)\n    @combine(:n_teams = @c length(unique(vcat(:home_team, :away_team))))\n    data(_) *\n        mapping(:year => \"Year\", :n_teams => \"Number of teams per competition\") *\n        (visual(Scatter, markersize = 4, color = (:black, 0.3)) + smooth() * visual(linewidth = 3))\n    draw\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n![](index_files/figure-html/cell-7-output-1.svg){}\n:::\n:::\n\n\nSo both the number of competitions, as well as the number of teams taking part in each competition has increased over the years.\n\nLet's check out how the number of goals per game during world cups has developed over time.\nAs football has become more and more professionalized, do the highly trained players of today score more or fewer goals? (The defense is also better trained, of course.)\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\n@chain df begin\n    @subset(:tournament == \"FIFA World Cup\")\n    @transform(:year = year(:date))\n    @transform(:n_goals = :home_score + :away_score)\n    @groupby(:year)\n    @combine(:average_goals = mean(:n_goals))\n    data(_) *\n        mapping(:year => \"Year\", :average_goals => \"Average goals per game\") *\n        (visual(Scatter) + smooth())\n    draw(axis = (limits = (nothing, (0, nothing)),))\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n![](index_files/figure-html/cell-8-output-1.svg){}\n:::\n:::\n\n\nIt seems the number of goals has gone down over time, from around 4 to 2.5 or so, where it has plateaued.\nThis dataset can give no indication, though, what the reasons for this development might be.\n\nOne thing we can look at, though, is the distribution of goal differences over time.\nMaybe the teams were just much more different in ability before?\n\nWe could make histograms for 1954 and 1990, which had high and low averages, respectively.\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\n@chain df begin\n    @transform(:year = year(:date))\n    @subset(:tournament == \"FIFA World Cup\", :year in (1954, 1990))\n    @transform(:goal_difference = abs(:home_score - :away_score))\n    data(_) *\n        mapping(:goal_difference  => \"Goal difference\",\n            col = :year => nonnumeric) *\n        frequency()\n    draw\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n![](index_files/figure-html/cell-9-output-1.svg){}\n:::\n:::\n\n\nSo there were even games with 7 or 9 goals difference in 1954, suggesting that at least some of the matches might have been quite unbalanced at the time, driving a higher goal average.\n\nIn 1990, most games were decided by one goal difference, in comparison.\n\nLet's turn to another question, that of the home team advantage.\nFor a quick glance, we can compute the probability of winning as the home team.\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\n@chain df begin\n    @subset(_, !:neutral; skipmissing = true)\n    @transform(:home_result = @m :home_score > :away_score ?\n        \"win\" : :away_score > :home_score ? \"lose\" : \"tie\")\n    dropmissing(:home_result)\n    @aside n = nrow(_)\n    @groupby(:home_result)\n    @combine(:p = length(:home_result) / n)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<div class=\"data-frame\"><p>3 rows × 2 columns</p><table class=\"data-frame\"><thead><tr><th></th><th>home_result</th><th>p</th></tr><tr><th></th><th title=\"String\">String</th><th title=\"Float64\">Float64</th></tr></thead><tbody><tr><th>1</th><td>tie</td><td>0.231335</td></tr><tr><th>2</th><td>win</td><td>0.505947</td></tr><tr><th>3</th><td>lose</td><td>0.262718</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nIt looks like the probability to win as the home team is about 50%, so twice as likely as losing.\nThis could be a bit misleading, potentially, if the better teams are also somehow the teams that host more games.\n\nSo we could check how it looks if we compute the win lose ratio for each team separately.\nOne problem is that each \"team\" (country) changes all the time, and Germany from 1950 has nothing in common with Germany from 2020.\nAs an approximation, we can split the timeline into 5 year bins, and calculate the ratio within those.\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\n@chain df begin\n    @subset(_, !:neutral; skipmissing = true)\n    @transform(:home_result = @m :home_score > :away_score ?\n        \"win\" : :away_score > :home_score ? \"lose\" : \"tie\")\n    dropmissing(:home_result)\n    @transform(:fiveyears = year(:date) - year(:date) % 5)\n    stack([:home_team, :away_team], variable_name = :type,\n        value_name = :team)\n    @transform(:result = if :type == \"home_team\"\n        :home_result\n    else\n        :home_result == \"win\" ? \"lose\" :\n            :home_result == \"lose\" ? \"win\" : \"tie\"\n    end)\n    @subset(:result != \"tie\")\n    @groupby(:fiveyears, :team, :type, :result)\n    combine(nrow  => :count)\n    unstack(:result, :count)\n    @transform(:win = coalesce(:win, 0), :lose = coalesce(:lose, 0))\n    @transform(:p_win = :win / (:win + :lose))\n    unstack([:fiveyears, :team], :type, :p_win)\n    @transform(:home_p_win_delta = :home_team - :away_team)\n    dropmissing(:home_p_win_delta)\n    data(_) *\n        mapping(:fiveyears => \"Five year period\", :home_p_win_delta => \"p(win) - p(lose)\") *\n        (visual(Scatter, markersize = 5, color = (:black, 0.2)) + smooth())\n    draw\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n![](index_files/figure-html/cell-11-output-1.svg){}\n:::\n:::\n\n\nEven though this is only a pretty rough analysis, the home advantage appears to hold up when looking at it within each team, separately over time.\n\nThis was an example of data analysis and plotting with DataFrameMacros.jl and AlgebraOfGraphics.jl.\nI hope you learned something new, either about Julia, or about international football.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}